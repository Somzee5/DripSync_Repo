{"ast":null,"code":"var _jsxFileName = \"D:\\\\DripSync-MP\\\\DripSync_Repo\\\\DripSyncFrontend\\\\dripsync\\\\src\\\\Components\\\\TryOn.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import './TryOn.css';\n\n// const TryOn = () => {\n//   const location = useLocation();\n//   const [originalImage, setOriginalImage] = useState(null);\n//   const [virtualTryOnImage, setVirtualTryOnImage] = useState(null);\n\n//   const productImageURL = location.state?.productImage;\n\n//   const handleImageUpload = (event) => {\n//     setOriginalImage(event.target.files[0]);\n//   };\n\n//   const handleSubmit = async () => {\n//     if (!originalImage) {\n//       alert('Please upload an image first!');\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append('original_image', originalImage);\n\n//     try {\n//       if (productImageURL) {\n//         const response = await fetch(productImageURL, { mode: 'cors' });\n//         if (!response.ok) {\n//           console.error('Failed to fetch product image from URL');\n//           alert('Could not fetch product image.');\n//           return;\n//         }\n//         const blob = await response.blob();\n//         formData.append('product_image', blob, 'product_image.jpg');\n//       } else {\n//         console.error('Product image URL is missing.');\n//         alert('Product image URL is required.');\n//         return;\n//       }\n\n//       const res = await fetch('http://localhost:5001/try-on', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (res.ok) {\n//         const result = await res.json();\n//         setVirtualTryOnImage(`http://localhost:5001/${result.result_image}`);\n//       } else {\n//         console.error('Failed to fetch the virtual try-on result.');\n//         alert('Virtual try-on failed. Please check the backend logs for more details.');\n//       }\n//     } catch (error) {\n//       console.error('Error:', error);\n//       alert('An error occurred while processing the request.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"try-on-container\">\n//       <div className=\"try-on-card\">\n//         <h3>Original Image</h3>\n//         <label htmlFor=\"file-upload\" className=\"file-upload-label\">\n//           Choose Image\n//         </label>\n//         <input\n//           id=\"file-upload\"\n//           type=\"file\"\n//           accept=\"image/*\"\n//           onChange={handleImageUpload}\n//           style={{ display: 'none' }}\n//         />\n//         {originalImage && (\n//           <img\n//             src={URL.createObjectURL(originalImage)}\n//             alt=\"Original\"\n//             className=\"try-on-image\"\n//           />\n//         )}\n//       </div>\n//       <div className=\"try-on-card\">\n//         <h3>Virtual Try-On Result</h3>\n//         {virtualTryOnImage ? (\n//           <img\n//             src={virtualTryOnImage}\n//             alt=\"Virtual Try-On\"\n//             className=\"try-on-image\"\n//           />\n//         ) : (\n//           <p>No virtual try-on result yet.</p>\n//         )}\n//       </div>\n//       <button onClick={handleSubmit} className=\"submit-button\">\n//         Submit\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default TryOn;\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './TryOn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TryOn = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const [productImage, setProductImage] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.productImage) || '');\n  useEffect(() => {\n    if (!productImage) {\n      console.error('Product image not provided.');\n    }\n  }, [productImage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"try-on-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Virtual Try-On\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), productImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: productImage,\n      alt: \"Product\",\n      className: \"product-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No product image available for try-on.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(TryOn, \"cEeLgRLyRiUBpBSHB4gEAqSaA+M=\", false, function () {\n  return [useLocation];\n});\n_c = TryOn;\nexport default TryOn;\nvar _c;\n$RefreshReg$(_c, \"TryOn\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","TryOn","_s","_location$state","location","productImage","setProductImage","state","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["D:/DripSync-MP/DripSync_Repo/DripSyncFrontend/dripsync/src/Components/TryOn.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import './TryOn.css';\r\n\r\n// const TryOn = () => {\r\n//   const location = useLocation();\r\n//   const [originalImage, setOriginalImage] = useState(null);\r\n//   const [virtualTryOnImage, setVirtualTryOnImage] = useState(null);\r\n\r\n//   const productImageURL = location.state?.productImage;\r\n\r\n//   const handleImageUpload = (event) => {\r\n//     setOriginalImage(event.target.files[0]);\r\n//   };\r\n\r\n//   const handleSubmit = async () => {\r\n//     if (!originalImage) {\r\n//       alert('Please upload an image first!');\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append('original_image', originalImage);\r\n\r\n//     try {\r\n//       if (productImageURL) {\r\n//         const response = await fetch(productImageURL, { mode: 'cors' });\r\n//         if (!response.ok) {\r\n//           console.error('Failed to fetch product image from URL');\r\n//           alert('Could not fetch product image.');\r\n//           return;\r\n//         }\r\n//         const blob = await response.blob();\r\n//         formData.append('product_image', blob, 'product_image.jpg');\r\n//       } else {\r\n//         console.error('Product image URL is missing.');\r\n//         alert('Product image URL is required.');\r\n//         return;\r\n//       }\r\n\r\n//       const res = await fetch('http://localhost:5001/try-on', {\r\n//         method: 'POST',\r\n//         body: formData,\r\n//       });\r\n\r\n//       if (res.ok) {\r\n//         const result = await res.json();\r\n//         setVirtualTryOnImage(`http://localhost:5001/${result.result_image}`);\r\n//       } else {\r\n//         console.error('Failed to fetch the virtual try-on result.');\r\n//         alert('Virtual try-on failed. Please check the backend logs for more details.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error:', error);\r\n//       alert('An error occurred while processing the request.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"try-on-container\">\r\n//       <div className=\"try-on-card\">\r\n//         <h3>Original Image</h3>\r\n//         <label htmlFor=\"file-upload\" className=\"file-upload-label\">\r\n//           Choose Image\r\n//         </label>\r\n//         <input\r\n//           id=\"file-upload\"\r\n//           type=\"file\"\r\n//           accept=\"image/*\"\r\n//           onChange={handleImageUpload}\r\n//           style={{ display: 'none' }}\r\n//         />\r\n//         {originalImage && (\r\n//           <img\r\n//             src={URL.createObjectURL(originalImage)}\r\n//             alt=\"Original\"\r\n//             className=\"try-on-image\"\r\n//           />\r\n//         )}\r\n//       </div>\r\n//       <div className=\"try-on-card\">\r\n//         <h3>Virtual Try-On Result</h3>\r\n//         {virtualTryOnImage ? (\r\n//           <img\r\n//             src={virtualTryOnImage}\r\n//             alt=\"Virtual Try-On\"\r\n//             className=\"try-on-image\"\r\n//           />\r\n//         ) : (\r\n//           <p>No virtual try-on result yet.</p>\r\n//         )}\r\n//       </div>\r\n//       <button onClick={handleSubmit} className=\"submit-button\">\r\n//         Submit\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TryOn;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './TryOn.css';\r\n\r\nconst TryOn = () => {\r\n  const location = useLocation();\r\n  const [productImage, setProductImage] = useState(location.state?.productImage || '');\r\n\r\n  useEffect(() => {\r\n    if (!productImage) {\r\n      console.error('Product image not provided.');\r\n    }\r\n  }, [productImage]);\r\n\r\n  return (\r\n    <div className=\"try-on-container\">\r\n      <h1>Virtual Try-On</h1>\r\n      {productImage ? (\r\n        <img src={productImage} alt=\"Product\" className=\"product-image\" />\r\n      ) : (\r\n        <p>No product image available for try-on.</p>\r\n      )}\r\n      {/* Additional try-on functionality can go here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TryOn;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAClB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAAM,eAAA,GAAAC,QAAQ,CAACG,KAAK,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBE,YAAY,KAAI,EAAE,CAAC;EAEpFT,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,YAAY,EAAE;MACjBG,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;IAC9C;EACF,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,oBACEL,OAAA;IAAKU,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BX,OAAA;MAAAW,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBV,YAAY,gBACXL,OAAA;MAAKgB,GAAG,EAAEX,YAAa;MAACY,GAAG,EAAC,SAAS;MAACP,SAAS,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAElEf,OAAA;MAAAW,QAAA,EAAG;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC7C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEV,CAAC;AAACb,EAAA,CArBID,KAAK;EAAA,QACQH,WAAW;AAAA;AAAAoB,EAAA,GADxBjB,KAAK;AAuBX,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}