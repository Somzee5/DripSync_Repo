{"ast":null,"code":"var _jsxFileName = \"D:\\\\DripSync-MP\\\\DripSync_Repo\\\\DripSyncFrontend\\\\dripsync\\\\src\\\\Components\\\\VerifyOTP.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../utils/api';\nimport { MDBBtn, MDBContainer, MDBCard, MDBCardBody, MDBInput, MDBIcon, MDBAlert } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyOTP = () => {\n  _s();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [otpInput, setOtpInput] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleVerifyOTP = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/api/user/verify-otp/', {\n        email,\n        otp_input: otpInput\n      });\n      if (response.status === 200) {\n        // If OTP is valid, proceed to reset password\n        await api.post('/api/user/reset-password/', {\n          email,\n          new_password: newPassword\n        });\n        setSuccess('Password has been reset successfully!');\n      }\n    } catch (error) {\n      setError(error.response.data.error || 'Failed to verify OTP');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    fluid: true,\n    className: \"p-4 background-radial-gradient overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(MDBCard, {\n      className: \"my-5 bg-glass\",\n      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        className: \"p-5\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleVerifyOTP,\n          children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n            wrapperClass: \"mb-4\",\n            label: \"Email\",\n            id: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n            wrapperClass: \"mb-4\",\n            label: \"OTP\",\n            id: \"otp\",\n            type: \"text\",\n            value: otpInput,\n            onChange: e => setOtpInput(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n            wrapperClass: \"mb-4\",\n            label: \"New Password\",\n            id: \"new-password\",\n            type: \"password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(MDBAlert, {\n            color: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(MDBAlert, {\n            color: \"success\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n            className: \"w-100 mb-4\",\n            size: \"md\",\n            type: \"submit\",\n            children: \"Verify OTP and Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyOTP, \"B4VRGQWrU3v93T1N2cInczj09rw=\", false, function () {\n  return [useHistory];\n});\n_c = VerifyOTP;\nexport default VerifyOTP;\nvar _c;\n$RefreshReg$(_c, \"VerifyOTP\");","map":{"version":3,"names":["React","useState","useHistory","api","MDBBtn","MDBContainer","MDBCard","MDBCardBody","MDBInput","MDBIcon","MDBAlert","jsxDEV","_jsxDEV","VerifyOTP","_s","history","email","setEmail","otpInput","setOtpInput","newPassword","setNewPassword","error","setError","success","setSuccess","handleVerifyOTP","e","preventDefault","response","post","otp_input","status","new_password","data","fluid","className","children","onSubmit","wrapperClass","label","id","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","color","size","_c","$RefreshReg$"],"sources":["D:/DripSync-MP/DripSync_Repo/DripSyncFrontend/dripsync/src/Components/VerifyOTP.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../utils/api';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBInput,\r\n  MDBIcon,\r\n  MDBAlert,\r\n} from 'mdb-react-ui-kit';\r\n\r\nconst VerifyOTP = () => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [otpInput, setOtpInput] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleVerifyOTP = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await api.post('/api/user/verify-otp/', {\r\n        email,\r\n        otp_input: otpInput,\r\n      });\r\n      \r\n      if (response.status === 200) {\r\n        // If OTP is valid, proceed to reset password\r\n        await api.post('/api/user/reset-password/', {\r\n          email,\r\n          new_password: newPassword,\r\n        });\r\n        setSuccess('Password has been reset successfully!');\r\n      }\r\n    } catch (error) {\r\n      setError(error.response.data.error || 'Failed to verify OTP');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MDBContainer fluid className='p-4 background-radial-gradient overflow-hidden'>\r\n      <MDBCard className='my-5 bg-glass'>\r\n        <MDBCardBody className='p-5'>\r\n          <form onSubmit={handleVerifyOTP}>\r\n            <MDBInput\r\n              wrapperClass='mb-4'\r\n              label='Email'\r\n              id='email'\r\n              type='email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            <MDBInput\r\n              wrapperClass='mb-4'\r\n              label='OTP'\r\n              id='otp'\r\n              type='text'\r\n              value={otpInput}\r\n              onChange={(e) => setOtpInput(e.target.value)}\r\n              required\r\n            />\r\n            <MDBInput\r\n              wrapperClass='mb-4'\r\n              label='New Password'\r\n              id='new-password'\r\n              type='password'\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              required\r\n            />\r\n\r\n            {error && <MDBAlert color='danger'>{error}</MDBAlert>}\r\n            {success && <MDBAlert color='success'>{success}</MDBAlert>}\r\n\r\n            <MDBBtn className='w-100 mb-4' size='md' type=\"submit\">\r\n              Verify OTP and Reset Password\r\n            </MDBBtn>\r\n          </form>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n}\r\n\r\nexport default VerifyOTP;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}