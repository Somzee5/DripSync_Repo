{"ast":null,"code":"var _jsxFileName = \"D:\\\\DripSync-MP\\\\DripSync_Repo\\\\DripSyncFrontend\\\\dripsync\\\\src\\\\Components\\\\VerifyOtp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../utils/api';\nimport { MDBBtn, MDBContainer, MDBInput, MDBCard, MDBCardBody, MDBIcon } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyOtp = () => {\n  _s();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [otpInput, setOtpInput] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleVerifyOtp = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/api/user/verify-otp/', {\n        email,\n        otp_input: otpInput,\n        new_password: newPassword\n      });\n      setSuccess(response.data.message);\n      setError('');\n      // Optionally redirect or perform any action after success\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to verify OTP');\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    fluid: true,\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(MDBCard, {\n      className: \"my-5\",\n      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        className: \"p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center\",\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleVerifyOtp,\n          children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n            wrapperClass: \"mb-4\",\n            label: \"Email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n            wrapperClass: \"mb-4\",\n            label: \"OTP\",\n            type: \"text\",\n            value: otpInput,\n            onChange: e => setOtpInput(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n            wrapperClass: \"mb-4\",\n            label: \"New Password\",\n            type: \"password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger text-center\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-success text-center\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n            className: \"w-100 mb-4\",\n            size: \"md\",\n            type: \"submit\",\n            children: \"Verify OTP and Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyOtp, \"B4VRGQWrU3v93T1N2cInczj09rw=\", false, function () {\n  return [useHistory];\n});\n_c = VerifyOtp;\nexport default VerifyOtp;\nvar _c;\n$RefreshReg$(_c, \"VerifyOtp\");","map":{"version":3,"names":["React","useState","useHistory","api","MDBBtn","MDBContainer","MDBInput","MDBCard","MDBCardBody","MDBIcon","jsxDEV","_jsxDEV","VerifyOtp","_s","history","email","setEmail","otpInput","setOtpInput","newPassword","setNewPassword","error","setError","success","setSuccess","handleVerifyOtp","e","preventDefault","response","post","otp_input","new_password","data","message","_error$response","_error$response$data","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","wrapperClass","label","type","value","onChange","target","required","size","_c","$RefreshReg$"],"sources":["D:/DripSync-MP/DripSync_Repo/DripSyncFrontend/dripsync/src/Components/VerifyOtp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../utils/api';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n} from 'mdb-react-ui-kit';\r\n\r\nconst VerifyOtp = () => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [otpInput, setOtpInput] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleVerifyOtp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await api.post('/api/user/verify-otp/', {\r\n        email,\r\n        otp_input: otpInput,\r\n        new_password: newPassword,\r\n      });\r\n      setSuccess(response.data.message);\r\n      setError('');\r\n      // Optionally redirect or perform any action after success\r\n    } catch (error) {\r\n      setError(error.response?.data?.error || 'Failed to verify OTP');\r\n      setSuccess('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MDBContainer fluid className='p-4'>\r\n      <MDBCard className='my-5'>\r\n        <MDBCardBody className='p-5'>\r\n          <h4 className=\"text-center\">Verify OTP</h4>\r\n          <form onSubmit={handleVerifyOtp}>\r\n            <MDBInput\r\n              wrapperClass='mb-4'\r\n              label='Email'\r\n              type='email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            <MDBInput\r\n              wrapperClass='mb-4'\r\n              label='OTP'\r\n              type='text'\r\n              value={otpInput}\r\n              onChange={(e) => setOtpInput(e.target.value)}\r\n              required\r\n            />\r\n            <MDBInput\r\n              wrapperClass='mb-4'\r\n              label='New Password'\r\n              type='password'\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              required\r\n            />\r\n\r\n            {error && <p className=\"text-danger text-center\">{error}</p>}\r\n            {success && <p className=\"text-success text-center\">{success}</p>}\r\n\r\n            <MDBBtn className='w-100 mb-4' size='md' type=\"submit\">\r\n              Verify OTP and Reset Password\r\n            </MDBBtn>\r\n          </form>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default VerifyOtp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}