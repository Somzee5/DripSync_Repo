{"ast":null,"code":"var _jsxFileName = \"D:\\\\DripSync-MP\\\\DripSync_Repo\\\\DripSyncFrontend\\\\dripsync\\\\src\\\\Components\\\\UploadPhoto.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CaptureImage from './CaptureImage';\nimport UploadPhoto from './UploadPhoto';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileSetup = () => {\n  _s();\n  const [attributes, setAttributes] = useState({\n    height: '',\n    weight: '',\n    age: '',\n    gender: '',\n    skin_tone: ''\n  });\n  const [isCaptureMode, setIsCaptureMode] = useState(false);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const history = useHistory();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAttributes({\n      ...attributes,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/profile-setup/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n        },\n        body: JSON.stringify(attributes)\n      });\n      const data = await response.json();\n      console.log(data);\n      if (data.success) {\n        history.push('/home/'); // Redirect to a success page or profile page\n      }\n    } catch (error) {\n      console.error('Error submitting profile attributes', error);\n    }\n  };\n  const handleImageCapture = imageDataUrl => {\n    setCapturedImage(imageDataUrl);\n    uploadImage(imageDataUrl);\n  };\n  const uploadImage = async imageDataUrl => {\n    try {\n      const response = await fetch('/upload-photo/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n        },\n        body: JSON.stringify({\n          image: imageDataUrl\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      if (data.success) {\n        history.push('/profile-setup/'); // Redirect to a success page or profile page\n      }\n    } catch (error) {\n      console.error('Error uploading image', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"height\",\n        value: attributes.height,\n        onChange: handleChange,\n        placeholder: \"Height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"weight\",\n        value: attributes.weight,\n        onChange: handleChange,\n        placeholder: \"Weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"age\",\n        value: attributes.age,\n        onChange: handleChange,\n        placeholder: \"Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"gender\",\n        value: attributes.gender,\n        onChange: handleChange,\n        placeholder: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"skin_tone\",\n        value: attributes.skin_tone,\n        onChange: handleChange,\n        placeholder: \"Skin Tone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsCaptureMode(true),\n        children: \"Capture Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsCaptureMode(false),\n        children: \"Upload Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), isCaptureMode ? /*#__PURE__*/_jsxDEV(CaptureImage, {\n      onSave: handleImageCapture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(UploadPhoto, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfileSetup, \"FeY7Q2LvRrM35i8fDwcvU9BnKq8=\", false, function () {\n  return [useHistory];\n});\n_c = ProfileSetup;\nexport default ProfileSetup;\nvar _c;\n$RefreshReg$(_c, \"ProfileSetup\");","map":{"version":3,"names":["React","useState","CaptureImage","UploadPhoto","useHistory","jsxDEV","_jsxDEV","ProfileSetup","_s","attributes","setAttributes","height","weight","age","gender","skin_tone","isCaptureMode","setIsCaptureMode","capturedImage","setCapturedImage","history","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","data","json","console","log","success","push","error","handleImageCapture","imageDataUrl","uploadImage","image","children","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSave","_c","$RefreshReg$"],"sources":["D:/DripSync-MP/DripSync_Repo/DripSyncFrontend/dripsync/src/Components/UploadPhoto.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CaptureImage from './CaptureImage';\r\nimport UploadPhoto from './UploadPhoto';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ProfileSetup = () => {\r\n    const [attributes, setAttributes] = useState({\r\n        height: '',\r\n        weight: '',\r\n        age: '',\r\n        gender: '',\r\n        skin_tone: ''\r\n    });\r\n    const [isCaptureMode, setIsCaptureMode] = useState(false);\r\n    const [capturedImage, setCapturedImage] = useState(null);\r\n    const history = useHistory();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setAttributes({\r\n            ...attributes,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('/profile-setup/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n                },\r\n                body: JSON.stringify(attributes)\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n            if (data.success) {\r\n                history.push('/home/'); // Redirect to a success page or profile page\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting profile attributes', error);\r\n        }\r\n    };\r\n\r\n    const handleImageCapture = (imageDataUrl) => {\r\n        setCapturedImage(imageDataUrl);\r\n        uploadImage(imageDataUrl);\r\n    };\r\n\r\n    const uploadImage = async (imageDataUrl) => {\r\n        try {\r\n            const response = await fetch('/upload-photo/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${localStorage.getItem('access_token')}`\r\n                },\r\n                body: JSON.stringify({ image: imageDataUrl })\r\n            });\r\n            const data = await response.json();\r\n            console.log(data);\r\n            if (data.success) {\r\n                history.push('/profile-setup/'); // Redirect to a success page or profile page\r\n            }\r\n        } catch (error) {\r\n            console.error('Error uploading image', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"height\" value={attributes.height} onChange={handleChange} placeholder=\"Height\" />\r\n                <input type=\"text\" name=\"weight\" value={attributes.weight} onChange={handleChange} placeholder=\"Weight\" />\r\n                <input type=\"text\" name=\"age\" value={attributes.age} onChange={handleChange} placeholder=\"Age\" />\r\n                <input type=\"text\" name=\"gender\" value={attributes.gender} onChange={handleChange} placeholder=\"Gender\" />\r\n                <input type=\"text\" name=\"skin_tone\" value={attributes.skin_tone} onChange={handleChange} placeholder=\"Skin Tone\" />\r\n                <button type=\"button\" onClick={() => setIsCaptureMode(true)}>Capture Image</button>\r\n                <button type=\"button\" onClick={() => setIsCaptureMode(false)}>Upload Photo</button>\r\n                <button type=\"submit\">Submit Profile</button>\r\n            </form>\r\n            {isCaptureMode ? (\r\n                <CaptureImage onSave={handleImageCapture} />\r\n            ) : (\r\n                <UploadPhoto />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileSetup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}