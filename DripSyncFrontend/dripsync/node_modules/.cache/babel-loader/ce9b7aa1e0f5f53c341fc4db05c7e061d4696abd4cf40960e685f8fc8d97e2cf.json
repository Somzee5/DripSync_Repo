{"ast":null,"code":"var _jsxFileName = \"D:\\\\DripSync-MP\\\\DripSync_Repo\\\\DripSyncFrontend\\\\dripsync\\\\src\\\\Components\\\\OtpVerification.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../utils/api';\nimport { MDBBtn, MDBContainer, MDBInput, MDBCard, MDBCardBody } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpVerification = () => {\n  _s();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [otpInput, setOtpInput] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleVerifyOtp = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/verify-otp/', {\n        email,\n        otp_input: otpInput,\n        new_password: newPassword\n      });\n      setSuccess(response.data.message);\n      setTimeout(() => {\n        history.push('/login');\n      }, 2000);\n    } catch (error) {\n      setError(error.response.data.error || 'Failed to reset password, please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: /*#__PURE__*/_jsxDEV(MDBCard, {\n      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleVerifyOtp,\n          children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n            label: \"Email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n            label: \"OTP\",\n            type: \"text\",\n            value: otpInput,\n            onChange: e => setOtpInput(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n            label: \"New Password\",\n            type: \"password\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-success\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n            type: \"submit\",\n            children: \"Verify OTP and Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpVerification, \"B4VRGQWrU3v93T1N2cInczj09rw=\", false, function () {\n  return [useHistory];\n});\n_c = OtpVerification;\nexport default OtpVerification;\nvar _c;\n$RefreshReg$(_c, \"OtpVerification\");","map":{"version":3,"names":["React","useState","useHistory","api","MDBBtn","MDBContainer","MDBInput","MDBCard","MDBCardBody","jsxDEV","_jsxDEV","OtpVerification","_s","history","email","setEmail","otpInput","setOtpInput","newPassword","setNewPassword","error","setError","success","setSuccess","handleVerifyOtp","e","preventDefault","response","post","otp_input","new_password","data","message","setTimeout","push","children","onSubmit","label","type","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/DripSync-MP/DripSync_Repo/DripSyncFrontend/dripsync/src/Components/OtpVerification.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../utils/api';\r\nimport {\r\n  MDBBtn,\r\n  MDBContainer,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBCardBody,\r\n} from 'mdb-react-ui-kit';\r\n\r\nconst OtpVerification = () => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState('');\r\n  const [otpInput, setOtpInput] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleVerifyOtp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await api.post('/verify-otp/', {\r\n        email,\r\n        otp_input: otpInput,\r\n        new_password: newPassword,\r\n      });\r\n      setSuccess(response.data.message);\r\n      setTimeout(() => {\r\n        history.push('/login');\r\n      }, 2000);\r\n    } catch (error) {\r\n      setError(error.response.data.error || 'Failed to reset password, please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MDBContainer>\r\n      <MDBCard>\r\n        <MDBCardBody>\r\n          <form onSubmit={handleVerifyOtp}>\r\n            <MDBInput\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            <MDBInput\r\n              label=\"OTP\"\r\n              type=\"text\"\r\n              value={otpInput}\r\n              onChange={(e) => setOtpInput(e.target.value)}\r\n              required\r\n            />\r\n            <MDBInput\r\n              label=\"New Password\"\r\n              type=\"password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              required\r\n            />\r\n            {error && <p className=\"text-danger\">{error}</p>}\r\n            {success && <p className=\"text-success\">{success}</p>}\r\n            <MDBBtn type=\"submit\">Verify OTP and Reset Password</MDBBtn>\r\n          </form>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default OtpVerification;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}