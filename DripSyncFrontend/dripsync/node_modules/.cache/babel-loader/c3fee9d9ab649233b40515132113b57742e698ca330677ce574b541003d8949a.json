{"ast":null,"code":"var _jsxFileName = \"D:\\\\DripSync-MP\\\\DripSync_Repo\\\\DripSyncFrontend\\\\dripsync\\\\src\\\\Components\\\\TryOn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './TryOn.css';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TryOn = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const [userId, setUserId] = useState(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [virtualTryOnImage, setVirtualTryOnImage] = useState(null);\n  const productImageURL = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.productImage;\n  useEffect(() => {\n    // Retrieve the user_id from sessionStorage\n    const storedUserId = sessionStorage.getItem('user_id');\n    if (storedUserId) {\n      setUserId(storedUserId);\n\n      // Fetch user's profile image (captured_image) from the backend\n      const fetchProfileImage = async () => {\n        try {\n          const response = await api.get(`/myprofile/${storedUserId}/`);\n          const profileImageUrl = `http://127.0.0.1:8000${response.data.profile.captured_image}`;\n\n          // Convert profile image URL to Blob\n          const imageResponse = await fetch(profileImageUrl, {\n            mode: 'cors'\n          });\n          const imageBlob = await imageResponse.blob();\n          setCapturedImage(imageBlob);\n        } catch (error) {\n          console.error('Error fetching profile image:', error);\n        }\n      };\n      fetchProfileImage();\n    } else {\n      console.error('User ID not found in session storage');\n    }\n  }, []);\n  const handleSubmit = async () => {\n    if (!capturedImage) {\n      alert('Profile image not found. Please ensure you have a profile image.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('original_image', capturedImage, 'original_image.jpg');\n    try {\n      if (productImageURL) {\n        // Fetch the product image from the URL\n        const response = await fetch(productImageURL, {\n          mode: 'cors'\n        });\n        const blob = await response.blob();\n\n        // Convert product image blob to JPEG and append to formData\n        const productImageBlob = await new Promise(resolve => {\n          const image = new Image();\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n          image.src = URL.createObjectURL(blob);\n          image.onload = () => {\n            canvas.width = image.width;\n            canvas.height = image.height;\n            ctx.drawImage(image, 0, 0);\n            canvas.toBlob(resolve, 'image/jpeg');\n          };\n        });\n        formData.append('product_image', productImageBlob, 'product_image.jpg');\n\n        // Send data to Flask backend for try-on processing\n        const res = await fetch('http://localhost:5001/try-on', {\n          method: 'POST',\n          body: formData\n        });\n        if (res.ok) {\n          const result = await res.json();\n          setVirtualTryOnImage(`http://localhost:5001/${result.result_image}`);\n        } else {\n          console.error('Virtual try-on failed.');\n          alert('Could not process the try-on.');\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred during virtual try-on.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"try-on-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"try-on-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Profile Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), capturedImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(capturedImage),\n        alt: \"Profile\",\n        className: \"try-on-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading profile image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"try-on-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Virtual Try-On Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), virtualTryOnImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: virtualTryOnImage,\n        alt: \"Virtual Try-On\",\n        className: \"try-on-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No virtual try-on result yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      children: \"Try On\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(TryOn, \"4rY7KB5U7TlzkgPam4UTNM07cNk=\", false, function () {\n  return [useLocation];\n});\n_c = TryOn;\nexport default TryOn;\nvar _c;\n$RefreshReg$(_c, \"TryOn\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","api","jsxDEV","_jsxDEV","TryOn","_s","_location$state","location","userId","setUserId","capturedImage","setCapturedImage","virtualTryOnImage","setVirtualTryOnImage","productImageURL","state","productImage","storedUserId","sessionStorage","getItem","fetchProfileImage","response","get","profileImageUrl","data","profile","captured_image","imageResponse","fetch","mode","imageBlob","blob","error","console","handleSubmit","alert","formData","FormData","append","productImageBlob","Promise","resolve","image","Image","canvas","document","createElement","ctx","getContext","src","URL","createObjectURL","onload","width","height","drawImage","toBlob","res","method","body","ok","result","json","result_image","className","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","onClick","_c","$RefreshReg$"],"sources":["D:/DripSync-MP/DripSync_Repo/DripSyncFrontend/dripsync/src/Components/TryOn.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './TryOn.css';\r\nimport api from '../utils/api';\r\n\r\nconst TryOn = () => {\r\n  const location = useLocation();\r\n  const [userId, setUserId] = useState(null);\r\n  const [capturedImage, setCapturedImage] = useState(null);\r\n  const [virtualTryOnImage, setVirtualTryOnImage] = useState(null);\r\n  \r\n  const productImageURL = location.state?.productImage;\r\n\r\n  useEffect(() => {\r\n    // Retrieve the user_id from sessionStorage\r\n    const storedUserId = sessionStorage.getItem('user_id');\r\n    if (storedUserId) {\r\n      setUserId(storedUserId);\r\n      \r\n      // Fetch user's profile image (captured_image) from the backend\r\n      const fetchProfileImage = async () => {\r\n        try {\r\n          const response = await api.get(`/myprofile/${storedUserId}/`);\r\n          const profileImageUrl = `http://127.0.0.1:8000${response.data.profile.captured_image}`;\r\n          \r\n          // Convert profile image URL to Blob\r\n          const imageResponse = await fetch(profileImageUrl, { mode: 'cors' });\r\n          const imageBlob = await imageResponse.blob();\r\n          setCapturedImage(imageBlob);\r\n        } catch (error) {\r\n          console.error('Error fetching profile image:', error);\r\n        }\r\n      };\r\n\r\n      fetchProfileImage();\r\n    } else {\r\n      console.error('User ID not found in session storage');\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!capturedImage) {\r\n      alert('Profile image not found. Please ensure you have a profile image.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('original_image', capturedImage, 'original_image.jpg');\r\n\r\n    try {\r\n      if (productImageURL) {\r\n        // Fetch the product image from the URL\r\n        const response = await fetch(productImageURL, { mode: 'cors' });\r\n        const blob = await response.blob();\r\n\r\n        // Convert product image blob to JPEG and append to formData\r\n        const productImageBlob = await new Promise((resolve) => {\r\n          const image = new Image();\r\n          const canvas = document.createElement('canvas');\r\n          const ctx = canvas.getContext('2d');\r\n          image.src = URL.createObjectURL(blob);\r\n\r\n          image.onload = () => {\r\n            canvas.width = image.width;\r\n            canvas.height = image.height;\r\n            ctx.drawImage(image, 0, 0);\r\n            canvas.toBlob(resolve, 'image/jpeg');\r\n          };\r\n        });\r\n\r\n        formData.append('product_image', productImageBlob, 'product_image.jpg');\r\n\r\n        // Send data to Flask backend for try-on processing\r\n        const res = await fetch('http://localhost:5001/try-on', {\r\n          method: 'POST',\r\n          body: formData,\r\n        });\r\n\r\n        if (res.ok) {\r\n          const result = await res.json();\r\n          setVirtualTryOnImage(`http://localhost:5001/${result.result_image}`);\r\n        } else {\r\n          console.error('Virtual try-on failed.');\r\n          alert('Could not process the try-on.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred during virtual try-on.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"try-on-container\">\r\n      <div className=\"try-on-card\">\r\n        <h3>Your Profile Image</h3>\r\n        {capturedImage ? (\r\n          <img src={URL.createObjectURL(capturedImage)} alt=\"Profile\" className=\"try-on-image\" />\r\n        ) : (\r\n          <p>Loading profile image...</p>\r\n        )} \r\n      </div>\r\n      <div className=\"try-on-card\">\r\n        <h3>Virtual Try-On Result</h3>\r\n        {virtualTryOnImage ? (\r\n          <img src={virtualTryOnImage} alt=\"Virtual Try-On\" className=\"try-on-image\" />\r\n        ) : (\r\n          <p>No virtual try-on result yet.</p>\r\n        )}\r\n      </div>\r\n      <button onClick={handleSubmit} className=\"submit-button\">\r\n        Try On\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TryOn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}