{"ast":null,"code":"var _jsxFileName = \"D:\\\\DripSync-MP\\\\DripSync_Repo\\\\DripSyncFrontend\\\\dripsync\\\\src\\\\Components\\\\TryOn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './TryOn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TryOn = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const [originalImage, setOriginalImage] = useState(null);\n  const [virtualTryOnImage, setVirtualTryOnImage] = useState(null);\n  const productImageURL = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.productImage;\n  console.log(\"Product Image URL:\", productImageURL);\n  const handleImageUpload = event => {\n    setOriginalImage(event.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    if (!originalImage) {\n      alert('Please upload an image first!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('original_image', originalImage);\n    try {\n      if (productImageURL) {\n        // Fetch the product image from the URL\n        const response = await fetch(productImageURL, {\n          mode: 'cors'\n        });\n        if (!response.ok) {\n          console.error('Failed to fetch product image from URL');\n          alert('Could not fetch product image.');\n          return;\n        }\n\n        // Convert the response to a blob and create a new image from it\n        const blob = await response.blob();\n        const image = new Image();\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        image.src = URL.createObjectURL(blob);\n        image.onload = async () => {\n          // Set the canvas dimensions to the image dimensions\n          canvas.width = image.width;\n          canvas.height = image.height;\n          ctx.drawImage(image, 0, 0);\n\n          // Convert the canvas to a JPEG blob\n          canvas.toBlob(async jpegBlob => {\n            formData.append('product_image', jpegBlob, 'product_image.jpg');\n\n            // Send the request to the backend\n            const res = await fetch('http://localhost:5001/try-on', {\n              method: 'POST',\n              body: formData\n            });\n            if (res.ok) {\n              const result = await res.json();\n              setVirtualTryOnImage(`http://localhost:5001/${result.result_image}`);\n            } else {\n              console.error('Failed to fetch the virtual try-on result.');\n              alert('Virtual try-on failed. Please check the backend logs for more details.');\n            }\n          }, 'image/jpeg');\n        };\n      } else {\n        console.error('Product image URL is missing.');\n        alert('Product image URL is required.');\n        return;\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while processing the request.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"try-on-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"try-on-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Original Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"file-upload-label\",\n        children: \"Choose Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), originalImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(originalImage),\n        alt: \"Original\",\n        className: \"try-on-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"try-on-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Virtual Try-On Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), virtualTryOnImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: virtualTryOnImage,\n        alt: \"Virtual Try-On\",\n        className: \"try-on-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No virtual try-on result yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(TryOn, \"EriNkw+rLmjlP8vPKr1Vwir3ulI=\", false, function () {\n  return [useLocation];\n});\n_c = TryOn;\nexport default TryOn;\nvar _c;\n$RefreshReg$(_c, \"TryOn\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","TryOn","_s","_location$state","location","originalImage","setOriginalImage","virtualTryOnImage","setVirtualTryOnImage","productImageURL","state","productImage","console","log","handleImageUpload","event","target","files","handleSubmit","alert","formData","FormData","append","response","fetch","mode","ok","error","blob","image","Image","canvas","document","createElement","ctx","getContext","src","URL","createObjectURL","onload","width","height","drawImage","toBlob","jpegBlob","res","method","body","result","json","result_image","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","accept","onChange","style","display","alt","onClick","_c","$RefreshReg$"],"sources":["D:/DripSync-MP/DripSync_Repo/DripSyncFrontend/dripsync/src/Components/TryOn.js"],"sourcesContent":["import React, { useState } from 'react'; \r\nimport { useLocation } from 'react-router-dom';\r\nimport './TryOn.css';\r\n\r\nconst TryOn = () => {\r\n  const location = useLocation();\r\n  const [originalImage, setOriginalImage] = useState(null);\r\n  const [virtualTryOnImage, setVirtualTryOnImage] = useState(null);\r\n\r\n  const productImageURL = location.state?.productImage;\r\n  console.log(\"Product Image URL:\", productImageURL);\r\n\r\n  const handleImageUpload = (event) => {\r\n    setOriginalImage(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!originalImage) {\r\n      alert('Please upload an image first!');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('original_image', originalImage);\r\n\r\n    try {\r\n      if (productImageURL) {\r\n        // Fetch the product image from the URL\r\n        const response = await fetch(productImageURL, { mode: 'cors' });\r\n        if (!response.ok) {\r\n          console.error('Failed to fetch product image from URL');\r\n          alert('Could not fetch product image.');\r\n          return;\r\n        }\r\n        \r\n        // Convert the response to a blob and create a new image from it\r\n        const blob = await response.blob();\r\n        const image = new Image();\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        image.src = URL.createObjectURL(blob);\r\n        \r\n        image.onload = async () => {\r\n          // Set the canvas dimensions to the image dimensions\r\n          canvas.width = image.width;\r\n          canvas.height = image.height;\r\n          ctx.drawImage(image, 0, 0);\r\n\r\n          // Convert the canvas to a JPEG blob\r\n          canvas.toBlob(async (jpegBlob) => {\r\n            formData.append('product_image', jpegBlob, 'product_image.jpg');\r\n\r\n            // Send the request to the backend\r\n            const res = await fetch('http://localhost:5001/try-on', {\r\n              method: 'POST',\r\n              body: formData,\r\n            });\r\n\r\n            if (res.ok) {\r\n              const result = await res.json();\r\n              setVirtualTryOnImage(`http://localhost:5001/${result.result_image}`);\r\n            } else {\r\n              console.error('Failed to fetch the virtual try-on result.');\r\n              alert('Virtual try-on failed. Please check the backend logs for more details.');\r\n            }\r\n          }, 'image/jpeg');\r\n        };\r\n      } else {\r\n        console.error('Product image URL is missing.');\r\n        alert('Product image URL is required.');\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred while processing the request.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"try-on-container\">\r\n      <div className=\"try-on-card\">\r\n        <h3>Original Image</h3>\r\n        <label htmlFor=\"file-upload\" className=\"file-upload-label\">\r\n          Choose Image\r\n        </label>\r\n        <input\r\n          id=\"file-upload\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n          style={{ display: 'none' }}\r\n        />\r\n        {originalImage && (\r\n          <img\r\n            src={URL.createObjectURL(originalImage)}\r\n            alt=\"Original\"\r\n            className=\"try-on-image\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"try-on-card\">\r\n        <h3>Virtual Try-On Result</h3>\r\n        {virtualTryOnImage ? (\r\n          <img\r\n            src={virtualTryOnImage}\r\n            alt=\"Virtual Try-On\"\r\n            className=\"try-on-image\"\r\n          />\r\n        ) : (\r\n          <p>No virtual try-on result yet.</p>\r\n        )}\r\n      </div>\r\n      <button onClick={handleSubmit} className=\"submit-button\">\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TryOn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}