{"ast":null,"code":"var _jsxFileName = \"D:\\\\DripSync-MP\\\\DripSync_Repo\\\\DripSyncFrontend\\\\dripsync\\\\src\\\\Components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../utils/api'; // Assuming you are using axios for HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const {\n    user_id\n  } = useParams();\n  const [userProfile, setUserProfile] = useState(null);\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      try {\n        const response = await api.get(`/profile/${user_id}/`);\n        setUserProfile(response.data.profile);\n      } catch (error) {\n        console.log(\"Error fetching profile\", error);\n      }\n    };\n    fetchUserProfile();\n  }, [user_id]);\n  if (!userProfile) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [userProfile.email, \"'s Profile\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(Profile, \"uhPajgPC8Q7OKmB/k8VaepR08fY=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","api","jsxDEV","_jsxDEV","Profile","_s","user_id","userProfile","setUserProfile","fetchUserProfile","response","get","data","profile","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","email","_c","$RefreshReg$"],"sources":["D:/DripSync-MP/DripSync_Repo/DripSyncFrontend/dripsync/src/Components/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport api from '../utils/api'; // Assuming you are using axios for HTTP requests\r\n\r\nconst Profile = () => {\r\n    const { user_id } = useParams();\r\n    const [userProfile, setUserProfile] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const fetchUserProfile = async () => {\r\n        try {\r\n          const response = await api.get(`/profile/${user_id}/`);\r\n          setUserProfile(response.data.profile);\r\n        } catch (error) {\r\n          console.log(\"Error fetching profile\", error);\r\n        }\r\n      };\r\n  \r\n      fetchUserProfile();\r\n    }, [user_id]);\r\n  \r\n    if (!userProfile) return <div>Loading...</div>;\r\n  \r\n    return (\r\n      <div>\r\n        <h1>{userProfile.email}'s Profile</h1>\r\n        {/* Display more profile details here */}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,GAAG,MAAM,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM;IAAEC;EAAQ,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,YAAYL,OAAO,GAAG,CAAC;QACtDE,cAAc,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,IAAI,CAACC,WAAW,EAAE,oBAAOJ,OAAA;IAAAc,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE9C,oBACElB,OAAA;IAAAc,QAAA,eACEd,OAAA;MAAAc,QAAA,GAAKV,WAAW,CAACe,KAAK,EAAC,YAAU;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAzBED,OAAO;EAAA,QACWJ,SAAS;AAAA;AAAAuB,EAAA,GAD3BnB,OAAO;AA4Bb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}