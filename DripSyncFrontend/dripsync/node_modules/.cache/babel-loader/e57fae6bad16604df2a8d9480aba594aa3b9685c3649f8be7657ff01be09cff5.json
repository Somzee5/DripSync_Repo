{"ast":null,"code":"var _jsxFileName = \"D:\\\\DripSync-MP\\\\DripSync_Repo\\\\DripSyncFrontend\\\\dripsync\\\\src\\\\Components\\\\TryOn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './TryOn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TryOn = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const [originalImage, setOriginalImage] = useState(null);\n  const [virtualTryOnImage, setVirtualTryOnImage] = useState(null);\n  const productImageURL = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.productImage;\n  console.log();\n  const handleImageUpload = event => {\n    setOriginalImage(event.target.files[0]);\n  };\n  const handleSubmit = async () => {\n    if (!originalImage) {\n      alert('Please upload an image first!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('original_image', originalImage);\n    try {\n      if (productImageURL) {\n        const response = await fetch(productImageURL, {\n          mode: 'cors'\n        });\n        if (!response.ok) {\n          console.error('Failed to fetch product image from URL');\n          alert('Could not fetch product image.');\n          return;\n        }\n        const blob = await response.blob();\n        formData.append('product_image', blob, 'product_image.jpg');\n      } else {\n        console.error('Product image URL is missing.');\n        alert('Product image URL is required.');\n        return;\n      }\n      const res = await fetch('http://localhost:5001/try-on', {\n        method: 'POST',\n        body: formData\n      });\n      if (res.ok) {\n        const result = await res.json();\n        setVirtualTryOnImage(`http://localhost:5001/${result.result_image}`);\n      } else {\n        console.error('Failed to fetch the virtual try-on result.');\n        alert('Virtual try-on failed. Please check the backend logs for more details.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while processing the request.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"try-on-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"try-on-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Original Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"file-upload-label\",\n        children: \"Choose Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), originalImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(originalImage),\n        alt: \"Original\",\n        className: \"try-on-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"try-on-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Virtual Try-On Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), virtualTryOnImage ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: virtualTryOnImage,\n        alt: \"Virtual Try-On\",\n        className: \"try-on-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No virtual try-on result yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"submit-button\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TryOn, \"EriNkw+rLmjlP8vPKr1Vwir3ulI=\", false, function () {\n  return [useLocation];\n});\n_c = TryOn;\nexport default TryOn;\n\n// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import './TryOn.css';\n\n// const TryOn = () => {\n//   const location = useLocation();\n//   const [productImage, setProductImage] = useState(location.state?.productImage || '');\n\n//   useEffect(() => {\n//     if (!productImage) {\n//       console.error('Product image not provided.');\n//     }\n//   }, [productImage]);\n\n//   return (\n//     <div className=\"try-on-container\">\n//       <h1>Virtual Try-On</h1>\n//       {productImage ? (\n//         <img src={productImage} alt=\"Product\" className=\"product-image\" />\n//       ) : (\n//         <p>No product image available for try-on.</p>\n//       )}\n//       {/* Additional try-on functionality can go here */}\n//     </div>\n//   );\n// };\n\n// export default TryOn;\nvar _c;\n$RefreshReg$(_c, \"TryOn\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","TryOn","_s","_location$state","location","originalImage","setOriginalImage","virtualTryOnImage","setVirtualTryOnImage","productImageURL","state","productImage","console","log","handleImageUpload","event","target","files","handleSubmit","alert","formData","FormData","append","response","fetch","mode","ok","error","blob","res","method","body","result","json","result_image","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","accept","onChange","style","display","src","URL","createObjectURL","alt","onClick","_c","$RefreshReg$"],"sources":["D:/DripSync-MP/DripSync_Repo/DripSyncFrontend/dripsync/src/Components/TryOn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './TryOn.css';\r\n\r\nconst TryOn = () => {\r\n  const location = useLocation();\r\n  const [originalImage, setOriginalImage] = useState(null);\r\n  const [virtualTryOnImage, setVirtualTryOnImage] = useState(null);\r\n\r\n  const productImageURL = location.state?.productImage;\r\n  console.log()\r\n\r\n  const handleImageUpload = (event) => {\r\n    setOriginalImage(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!originalImage) {\r\n      alert('Please upload an image first!');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('original_image', originalImage);\r\n\r\n    try {\r\n      if (productImageURL) {\r\n        const response = await fetch(productImageURL, { mode: 'cors' });\r\n        if (!response.ok) {\r\n          console.error('Failed to fetch product image from URL');\r\n          alert('Could not fetch product image.');\r\n          return;\r\n        }\r\n        const blob = await response.blob();\r\n        formData.append('product_image', blob, 'product_image.jpg');\r\n      } else {\r\n        console.error('Product image URL is missing.');\r\n        alert('Product image URL is required.');\r\n        return;\r\n      }\r\n\r\n      const res = await fetch('http://localhost:5001/try-on', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (res.ok) {\r\n        const result = await res.json();\r\n        setVirtualTryOnImage(`http://localhost:5001/${result.result_image}`);\r\n      } else {\r\n        console.error('Failed to fetch the virtual try-on result.');\r\n        alert('Virtual try-on failed. Please check the backend logs for more details.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred while processing the request.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"try-on-container\">\r\n      <div className=\"try-on-card\">\r\n        <h3>Original Image</h3>\r\n        <label htmlFor=\"file-upload\" className=\"file-upload-label\">\r\n          Choose Image\r\n        </label>\r\n        <input\r\n          id=\"file-upload\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n          style={{ display: 'none' }}\r\n        />\r\n        {originalImage && (\r\n          <img\r\n            src={URL.createObjectURL(originalImage)}\r\n            alt=\"Original\"\r\n            className=\"try-on-image\"\r\n          />\r\n        )}\r\n      </div>\r\n      <div className=\"try-on-card\">\r\n        <h3>Virtual Try-On Result</h3>\r\n        {virtualTryOnImage ? (\r\n          <img\r\n            src={virtualTryOnImage}\r\n            alt=\"Virtual Try-On\"\r\n            className=\"try-on-image\"\r\n          />\r\n        ) : (\r\n          <p>No virtual try-on result yet.</p>\r\n        )}\r\n      </div>\r\n      <button onClick={handleSubmit} className=\"submit-button\">\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TryOn;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import './TryOn.css';\r\n\r\n// const TryOn = () => {\r\n//   const location = useLocation();\r\n//   const [productImage, setProductImage] = useState(location.state?.productImage || '');\r\n\r\n//   useEffect(() => {\r\n//     if (!productImage) {\r\n//       console.error('Product image not provided.');\r\n//     }\r\n//   }, [productImage]);\r\n\r\n//   return (\r\n//     <div className=\"try-on-container\">\r\n//       <h1>Virtual Try-On</h1>\r\n//       {productImage ? (\r\n//         <img src={productImage} alt=\"Product\" className=\"product-image\" />\r\n//       ) : (\r\n//         <p>No product image available for try-on.</p>\r\n//       )}\r\n//       {/* Additional try-on functionality can go here */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TryOn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}