{"ast":null,"code":"var _jsxFileName = \"D:\\\\DripSync-MP\\\\DripSync_Repo\\\\DripSyncFrontend\\\\dripsync\\\\src\\\\Components\\\\ProductCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { MDBCard, MDBCardBody } from 'mdb-react-ui-kit';\nimport './ProductCard.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = () => {\n  _s();\n  const {\n    gender,\n    taskId\n  } = useParams();\n  const [cards, setCards] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const location = useLocation();\n  const [gen, setGen] = useState(gender); // Initialize with gender from params\n  const [subcategory, setSubcategory] = useState(''); // Initialize subcategory\n\n  useEffect(() => {\n    const pathParts = location.pathname.split('/');\n    setGen(pathParts[2]); // Set gen from URL\n    setSubcategory(pathParts[3]); // Set subcategory from URL\n\n    setSearchTerm(taskId);\n    fetchData();\n  }, [taskId, location]);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/get-data?search_term=${subcategory}&gender=${gen}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Fetched data:', data);\n      setCards(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const renderCards = () => {\n    const rows = [];\n    for (let i = 0; i < cards.length; i += 3) {\n      const rowItems = cards.slice(i, i + 3); // Get a row of three items\n      rows.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-row\",\n        children: rowItems.map((item, index) => {\n          const ProductCard = () => /*#__PURE__*/_jsxDEV(MDBCard, {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.URL_image,\n                alt: item.Brand,\n                className: \"card-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: item.Brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.Description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/home/${gen}/${subcategory}/${item.Id_Product}`,\n                className: \"card-button\",\n                children: \"Learn More\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this);\n          return /*#__PURE__*/_jsxDEV(ProductCard, {}, `card-${i + index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 20\n          }, this);\n        })\n      }, `row-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this));\n    }\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: cards.length > 0 ? renderCards() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No cards available!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 43\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"fNQ898lF/5oJVc0kBGYkGegRL1k=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","MDBCard","MDBCardBody","useLocation","jsxDEV","_jsxDEV","TaskCard","_s","gender","taskId","cards","setCards","searchTerm","setSearchTerm","location","gen","setGen","subcategory","setSubcategory","pathParts","pathname","split","fetchData","response","fetch","ok","Error","data","json","console","log","error","renderCards","rows","i","length","rowItems","slice","push","className","children","map","item","index","ProductCard","src","URL_image","alt","Brand","fileName","_jsxFileName","lineNumber","columnNumber","Description","to","Id_Product","_c","$RefreshReg$"],"sources":["D:/DripSync-MP/DripSync_Repo/DripSyncFrontend/dripsync/src/Components/ProductCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { MDBCard, MDBCardBody } from 'mdb-react-ui-kit';\r\nimport './ProductCard.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst TaskCard = () => {\r\n  const { gender, taskId } = useParams();\r\n  const [cards, setCards] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const location = useLocation();\r\n  const [gen, setGen] = useState(gender); // Initialize with gender from params\r\n  const [subcategory, setSubcategory] = useState(''); // Initialize subcategory\r\n\r\n  useEffect(() => {\r\n    const pathParts = location.pathname.split('/');\r\n    setGen(pathParts[2]); // Set gen from URL\r\n    setSubcategory(pathParts[3]); // Set subcategory from URL\r\n\r\n    setSearchTerm(taskId);\r\n    fetchData();\r\n  }, [taskId, location]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:5000/get-data?search_term=${subcategory}&gender=${gen}`);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      console.log('Fetched data:', data);\r\n      setCards(data);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  const renderCards = () => {\r\n    const rows = [];\r\n    for (let i = 0; i < cards.length; i += 3) {\r\n      const rowItems = cards.slice(i, i + 3); // Get a row of three items\r\n      rows.push(\r\n        <div className=\"card-row\" key={`row-${i}`}>\r\n          {rowItems.map((item, index) => {\r\n            const ProductCard = () => (\r\n              <MDBCard className=\"card\">\r\n                <MDBCardBody>\r\n                  <img\r\n                    src={item.URL_image}\r\n                    alt={item.Brand}\r\n                    className=\"card-image\"\r\n                  />\r\n                  <h2>{item.Brand}</h2>\r\n                  <p>{item.Description}</p>\r\n                  <Link to={`/home/${gen}/${subcategory}/${item.Id_Product}`} className=\"card-button\">\r\n                    Learn More\r\n                  </Link>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n            );\r\n\r\n            return <ProductCard key={`card-${i + index}`} />;\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-container\">\r\n      {cards.length > 0 ? renderCards() : <div>No cards available!</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}